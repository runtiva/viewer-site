name: CI
on:
  # On PRs for develop branch, we run checks / tests
  pull_request:
    branches: [develop, main]

  # On pushes/approvals of PRs for develop branch,
  # we re-run build and run checks / tests
  # then deploy to staging
  push:
    branches: [develop, main]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
      SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
    steps:
      # Checkout from repo
      - uses: actions/checkout@v2
        # cache npm node modules for future workflow processes
      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashfiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      # Load NodeJS dependency
      - name: Use NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      # Run npm build and validate formatting & tests
      - run: npm ci
      - run: npm run format:check
      - run: npm test -- --coverage
        env:
          CI: true
      - name: Upload Test Coverage
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage
          path: coverage
      - name: Build Project
        if: github.event_name == 'push'
        run: npm run build
      - name: Upload Build Folder
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: build
      - name: ZIP Assets
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          zip -r build.zip ./build
          zip -r coverage.zip ./coverage
      - name: Create a Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy to Staging
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        #install and run surge to deploy
        run: npx surge --project ./build --domain momentous-scarf.surge.sh
      # Publish to prod -- actually same as staging in this sample exercise
      - name: Deploy to Production
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx surge --project ./build --domain momentous-scarf.surge.sh
